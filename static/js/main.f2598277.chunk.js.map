{"version":3,"sources":["index.js","data/cardDetails.js","view/cardView.js","view/deckView.js","view/reservedPileView.js","view/stackPileView.js","view/gameView.js","model/game.js","model/deck.js","model/card.js","model/reservedPile.js","model/stackPile.js"],"names":["EmptyCard","Default","unicode","CardView","_this$props","this","props","card","onClick","className","id","draggable","onDragStart","onDrop","onDragOver","react_default","a","createElement","style","color","React","Component","DeckView","deck","updater","hasNext","cardView","drag","hasOpenCard","getOpenCard","renderClosedCard","renderOpenCard","ReservedPileView","pile","hasLastCard","getLastCard","drop","allowDrop","StackPileView","stackPile","Array","getNoOfClosedCards","fill","map","x","doubleClick","openCards","getOpenCards","noOfOpenCards","length","index","hasCard","renderClosedCards","renderOpenCards","GameView","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","game","bind","assertThisInitialized","placeCardToReserved","updateDeck","setState","ev","sourceDetail","target","moveCardToReserved","preventDefault","dataTransfer","setData","data","getData","moveCard","reservedPiles","getReservedPiles","reservedPilesJSX","reservedPileNumber","push","reservedPileView","_this2","stackPilesJSX","getStackPiles","stackPileView","deckView_DeckView","getDeck","renderReservedPiles","renderStackPiles","Game","stackPiles","update","sourceDetails","_sourceDetails$split","split","_sourceDetails$split2","slicedToArray","source","destinationDetails","_destinationDetails$s","_destinationDetails$s2","destination","getSource","getDestination","noOfCards","cards","getCards","addCards","removeCards","Deck","closedCards","slice","splice","reverse","lastCard","pop","Card","cardDetails","type","number","ReservedPile","checkingCards","initialCard","shift","every","result","isNextForReserved","areAddable","concat","checkCards","areOfThisTypeCards","checkNumber","previousCard","currentCard","isPreviousNumber","isOfSameType","StackPile","previousCardDetail","reduce","isNextNumber","isOfSameColor","newCard","shuffledCards","lodash","shuffle","deckCards","cardNumber","noOfReservedPiles","reservedPile","noOfStackPile","noOfClosedCards","ReactDOM","render","gameView_GameView","document","getElementById"],"mappings":"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","file":"static/js/main.f2598277.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport lodash from \"lodash\";\n\n//css\nimport \"./index.css\";\n\n//data\nimport { Cards } from \"./data/cardDetails\";\n\n//view models\nimport GameView from \"./view/gameView\";\n\n//game modles\nimport Game from \"./model/game\";\nimport Deck from \"./model/deck\";\nimport Card from \"./model/card\";\nimport ReservedPile from \"./model/reservedPile\";\nimport StackPile from \"./model/stackPile\";\n\nconst shuffledCards = lodash.shuffle(Cards).map(card => new Card(card));\n\nconst deckCards = [];\nfor (let cardNumber = 0; cardNumber < 24; cardNumber++) {\n  const card = shuffledCards.shift();\n  deckCards.push(card);\n}\n\nconst reservedPiles = [];\nfor (let noOfReservedPiles = 0; noOfReservedPiles < 4; noOfReservedPiles++) {\n  const reservedPile = new ReservedPile([]);\n  reservedPiles.push(reservedPile);\n}\n\nconst stackPiles = [];\nfor (let noOfStackPile = 0; noOfStackPile < 7; noOfStackPile++) {\n  const closedCards = [];\n  for (\n    let noOfClosedCards = 0;\n    noOfClosedCards <= noOfStackPile - 1;\n    noOfClosedCards++\n  ) {\n    const card = shuffledCards.shift();\n    closedCards.push(card);\n  }\n  const openCards = [];\n  openCards.push(shuffledCards.shift());\n  const stackPile = new StackPile(closedCards, openCards);\n  stackPiles.push(stackPile);\n}\n\nconst deck = new Deck(deckCards);\nconst game = new Game(deck, reservedPiles, stackPiles);\n\nReactDOM.render(<GameView game={game} />, document.getElementById(\"root\"));\n","const Cards = [\n  {\n    type: \"spade\",\n    number: \"1\",\n    color: \"black\",\n    unicode: \"\\u{1F0A1}\"\n  },\n  {\n    type: \"spade\",\n    number: \"2\",\n    color: \"black\",\n    unicode: \"\\u{1F0A2}\"\n  },\n  {\n    type: \"spade\",\n    number: \"3\",\n    color: \"black\",\n    unicode: \"\\u{1F0A3}\"\n  },\n  {\n    type: \"spade\",\n    number: \"4\",\n    color: \"black\",\n    unicode: \"\\u{1F0A4}\"\n  },\n  {\n    type: \"spade\",\n    number: \"5\",\n    color: \"black\",\n    unicode: \"\\u{1F0A5}\"\n  },\n  {\n    type: \"spade\",\n    number: \"6\",\n    color: \"black\",\n    unicode: \"\\u{1F0A6}\"\n  },\n  {\n    type: \"spade\",\n    number: \"7\",\n    color: \"black\",\n    unicode: \"\\u{1F0A7}\"\n  },\n  {\n    type: \"spade\",\n    number: \"8\",\n    color: \"black\",\n    unicode: \"\\u{1F0A8}\"\n  },\n  {\n    type: \"spade\",\n    number: \"9\",\n    color: \"black\",\n    unicode: \"\\u{1F0A9}\"\n  },\n  {\n    type: \"spade\",\n    number: \"10\",\n    color: \"black\",\n    unicode: \"\\u{1F0AA}\"\n  },\n  {\n    type: \"spade\",\n    number: \"11\",\n    color: \"black\",\n    unicode: \"\\u{1F0AB}\"\n  },\n  {\n    type: \"spade\",\n    number: \"12\",\n    color: \"black\",\n    unicode: \"\\u{1F0AD}\"\n  },\n  {\n    type: \"spade\",\n    number: \"13\",\n    color: \"black\",\n    unicode: \"\\u{1F0AE}\"\n  },\n  {\n    type: \"club\",\n    number: \"1\",\n    color: \"black\",\n    unicode: \"\\u{1F0D1}\"\n  },\n  {\n    type: \"club\",\n    number: \"2\",\n    color: \"black\",\n    unicode: \"\\u{1F0D2}\"\n  },\n  {\n    type: \"club\",\n    number: \"3\",\n    color: \"black\",\n    unicode: \"\\u{1F0D3}\"\n  },\n  {\n    type: \"club\",\n    number: \"4\",\n    color: \"black\",\n    unicode: \"\\u{1F0D4}\"\n  },\n  {\n    type: \"club\",\n    number: \"5\",\n    color: \"black\",\n    unicode: \"\\u{1F0D5}\"\n  },\n  {\n    type: \"club\",\n    number: \"6\",\n    color: \"black\",\n    unicode: \"\\u{1F0D6}\"\n  },\n  {\n    type: \"club\",\n    number: \"7\",\n    color: \"black\",\n    unicode: \"\\u{1F0D7}\"\n  },\n  {\n    type: \"club\",\n    number: \"8\",\n    color: \"black\",\n    unicode: \"\\u{1F0D8}\"\n  },\n  {\n    type: \"club\",\n    number: \"9\",\n    color: \"black\",\n    unicode: \"\\u{1F0D9}\"\n  },\n  {\n    type: \"club\",\n    number: \"10\",\n    color: \"black\",\n    unicode: \"\\u{1F0DA}\"\n  },\n  {\n    type: \"club\",\n    number: \"11\",\n    color: \"black\",\n    unicode: \"\\u{1F0DB}\"\n  },\n  {\n    type: \"club\",\n    number: \"12\",\n    color: \"black\",\n    unicode: \"\\u{1F0DD}\"\n  },\n  {\n    type: \"club\",\n    number: \"13\",\n    color: \"black\",\n    unicode: \"\\u{1F0DE}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"1\",\n    color: \"red\",\n    unicode: \"\\u{1F0C1}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"2\",\n    color: \"red\",\n    unicode: \"\\u{1F0C2}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"3\",\n    color: \"red\",\n    unicode: \"\\u{1F0C3}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"4\",\n    color: \"red\",\n    unicode: \"\\u{1F0C4}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"5\",\n    color: \"red\",\n    unicode: \"\\u{1F0C5}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"6\",\n    color: \"red\",\n    unicode: \"\\u{1F0C6}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"7\",\n    color: \"red\",\n    unicode: \"\\u{1F0C7}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"8\",\n    color: \"red\",\n    unicode: \"\\u{1F0C8}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"9\",\n    color: \"red\",\n    unicode: \"\\u{1F0C9}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"10\",\n    color: \"red\",\n    unicode: \"\\u{1F0CA}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"11\",\n    color: \"red\",\n    unicode: \"\\u{1F0CB}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"12\",\n    color: \"red\",\n    unicode: \"\\u{1F0CD}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"13\",\n    color: \"red\",\n    unicode: \"\\u{1F0CE}\"\n  },\n  {\n    type: \"heart\",\n    number: \"1\",\n    color: \"red\",\n    unicode: \"\\u{1F0B1}\"\n  },\n  {\n    type: \"heart\",\n    number: \"2\",\n    color: \"red\",\n    unicode: \"\\u{1F0B2}\"\n  },\n  {\n    type: \"heart\",\n    number: \"3\",\n    color: \"red\",\n    unicode: \"\\u{1F0B3}\"\n  },\n  {\n    type: \"heart\",\n    number: \"4\",\n    color: \"red\",\n    unicode: \"\\u{1F0B4}\"\n  },\n  {\n    type: \"heart\",\n    number: \"5\",\n    color: \"red\",\n    unicode: \"\\u{1F0B5}\"\n  },\n  {\n    type: \"heart\",\n    number: \"6\",\n    color: \"red\",\n    unicode: \"\\u{1F0B6}\"\n  },\n  {\n    type: \"heart\",\n    number: \"7\",\n    color: \"red\",\n    unicode: \"\\u{1F0B7}\"\n  },\n  {\n    type: \"heart\",\n    number: \"8\",\n    color: \"red\",\n    unicode: \"\\u{1F0B8}\"\n  },\n  {\n    type: \"heart\",\n    number: \"9\",\n    color: \"red\",\n    unicode: \"\\u{1F0B9}\"\n  },\n  {\n    type: \"heart\",\n    number: \"10\",\n    color: \"red\",\n    unicode: \"\\u{1F0BA}\"\n  },\n  {\n    type: \"heart\",\n    number: \"11\",\n    color: \"red\",\n    unicode: \"\\u{1F0BB}\"\n  },\n  {\n    type: \"heart\",\n    number: \"12\",\n    color: \"red\",\n    unicode: \"\\u{1F0BD}\"\n  },\n  {\n    type: \"heart\",\n    number: \"13\",\n    color: \"red\",\n    unicode: \"\\u{1F0BE}\"\n  }\n];\n\nconst EmptyCard = {};\n\nconst Default = {\n  unicode: \"\\u{1F0A0}\"\n};\n\nexport { Cards, EmptyCard, Default };\n","import React from \"react\";\n\nclass CardView extends React.Component {\n  render() {\n    const {\n      card,\n      onClick,\n      className,\n      id,\n      draggable,\n      onDragStart,\n      onDrop,\n      onDragOver\n    } = this.props;\n\n    return (\n      <div\n        style={{ color: card.color }}\n        className={\"card \" + className}\n        id={id}\n        draggable={draggable}\n        onDragStart={onDragStart}\n        onClick={onClick}\n        onDrop={onDrop}\n        onDragOver={onDragOver}\n      >\n        {card.unicode}\n      </div>\n    );\n  }\n}\n\nexport default CardView;\n","import React from \"react\";\n\nimport { EmptyCard, Default } from \"../data/cardDetails\";\nimport CardView from \"./cardView\";\n\nexport default class DeckView extends React.Component {\n  renderClosedCard(deck, updater) {\n    const className = \"clickable pile-separator\";\n    if (deck.hasNext()) {\n      return (\n        <CardView className={className} onClick={updater} card={Default} />\n      );\n    }\n    return (\n      <CardView className={className} card={EmptyCard} onClick={updater} />\n    );\n  }\n\n  renderOpenCard(deck, drag) {\n    const className = \"pile-separator\";\n    if (deck.hasOpenCard()) {\n      const card = deck.getOpenCard();\n      return (\n        <CardView\n          className={className}\n          id=\"deck\"\n          draggable=\"true\"\n          onDragStart={drag}\n          card={card}\n        />\n      );\n    }\n    return <CardView className={className} card={EmptyCard} />;\n  }\n\n  render() {\n    return (\n      <div className=\"deck\">\n        {this.renderClosedCard(this.props.deck, this.props.updater)}\n        {this.renderOpenCard(this.props.deck, this.props.drag)}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { EmptyCard } from \"../data/cardDetails\";\nimport CardView from \"./cardView\";\n\nclass ReservedPileView extends React.Component {\n  render() {\n    const pile = this.props.pile;\n\n    if (pile.hasLastCard()) {\n      const card = pile.getLastCard();\n      return (\n        <CardView\n          id={\"reservedPiles_\" + this.props.id}\n          draggable=\"true\"\n          onDragStart={this.props.drag}\n          className=\"pile-separator\"\n          onDrop={this.props.drop}\n          onDragOver={this.props.allowDrop}\n          card={card}\n        />\n      );\n    }\n\n    return (\n      <CardView\n        id={\"reservedPiles_\" + this.props.id}\n        className=\"pile-separator\"\n        onDrop={this.props.drop}\n        onDragOver={this.props.allowDrop}\n        card={EmptyCard}\n      />\n    );\n  }\n}\n\nexport default ReservedPileView;\n","import React from \"react\";\nimport { EmptyCard, Default } from \"../data/cardDetails\";\nimport CardView from \"./cardView\";\n\nclass StackPileView extends React.Component {\n  renderClosedCards(stackPile, id) {\n    return new Array(stackPile.getNoOfClosedCards())\n      .fill(0)\n      .map(x => (\n        <CardView\n          className=\"adjustable-card\"\n          id={\"stackPiles_\" + id}\n          card={Default}\n        />\n      ));\n  }\n\n  renderOpenCards(stackPile, id, drag, doubleClick) {\n    const openCards = stackPile.getOpenCards();\n    const noOfOpenCards = openCards.length;\n    if (noOfOpenCards === 0) {\n      return [];\n    }\n    return openCards.map((card, index) => {\n      return (\n        <CardView\n          className=\"adjustable-card\"\n          card={card}\n          id={\"stackPiles_\" + id + \"_\" + (noOfOpenCards - index)}\n          onDragStart={drag}\n          draggable=\"true\"\n          doubleClick={doubleClick}\n        />\n      );\n    });\n  }\n\n  render() {\n    const { stackPile, id, drag, drop, allowDrop, doubleClick } = this.props;\n    if (!stackPile.hasCard()) {\n      return (\n        <div\n          className=\"stack-pile stack-pile-separator\"\n          id={\"stackPiles_\" + id}\n          onDrop={drop}\n          onDragOver={allowDrop}\n        >\n          <CardView\n            className=\"card adjustable-card\"\n            id={\"stackPiles_\" + id}\n            card={EmptyCard}\n          />\n        </div>\n      );\n    }\n    return (\n      <div\n        className=\"stack-pile stack-pile-separator\"\n        id={\"stackPiles_\" + id}\n        onDrop={drop}\n        onDragOver={allowDrop}\n      >\n        {this.renderClosedCards(stackPile, id)}\n        {this.renderOpenCards(stackPile, id, drag, doubleClick)}\n      </div>\n    );\n  }\n}\n\nexport default StackPileView;\n","import React from \"react\";\nimport DeckView from \"./deckView\";\nimport ReservedPileView from \"./reservedPileView\";\nimport StackPileView from \"./stackPileView\";\n\nexport default class GameView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { game: props.game };\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n    this.allowDrop = this.allowDrop.bind(this);\n    this.placeCardToReserved = this.placeCardToReserved.bind(this);\n  }\n\n  updateDeck() {\n    this.state.game.updateDeck();\n    this.setState(state => state);\n  }\n\n  placeCardToReserved(ev) {\n    const sourceDetail = ev.target.id;\n    this.state.game.moveCardToReserved(sourceDetail);\n    this.setState(state => state);\n  }\n\n  allowDrop(ev) {\n    ev.preventDefault();\n  }\n\n  drag(ev) {\n    ev.dataTransfer.setData(\"text\", ev.target.id);\n  }\n\n  drop(ev) {\n    ev.preventDefault();\n    const data = ev.dataTransfer.getData(\"text\");\n    this.state.game.moveCard(data, ev.target.id);\n    this.setState(state => state);\n  }\n\n  renderReservedPiles() {\n    const reservedPiles = this.state.game.getReservedPiles();\n    const reservedPilesJSX = [];\n    for (\n      let reservedPileNumber = 0;\n      reservedPileNumber < reservedPiles.length;\n      reservedPileNumber++\n    ) {\n      reservedPilesJSX.push(\n        <ReservedPileView\n          pile={reservedPiles[reservedPileNumber]}\n          drag={this.drag}\n          drop={this.drop}\n          allowDrop={this.allowDrop}\n          id={reservedPileNumber}\n        />\n      );\n    }\n    return <div className=\"reserved-piles\">{reservedPilesJSX}</div>;\n  }\n\n  renderStackPiles() {\n    const stackPiles = this.state.game.getStackPiles();\n    const stackPilesJSX = stackPiles.map((stackPile, index) => {\n      return (\n        <StackPileView\n          stackPile={stackPile}\n          id={index}\n          drag={this.drag}\n          drop={this.drop}\n          allowDrop={this.allowDrop}\n          doubleClick={this.placeCardToReserved}\n        />\n      );\n    });\n    return <div className=\"stack-piles\">{stackPilesJSX}</div>;\n  }\n\n  render() {\n    return (\n      <div className=\"body\">\n        <h1>Solitaire</h1>\n        <div className=\"top-cards\">\n          <DeckView\n            deck={this.state.game.getDeck()}\n            updater={this.updateDeck.bind(this)}\n            drag={this.drag}\n            doubleClick={this.placeCardToReserved}\n          />\n          {this.renderReservedPiles()}\n        </div>\n        {this.renderStackPiles()}\n      </div>\n    );\n  }\n}\n","class Game {\n  constructor(deck, reservedPiles, stackPiles) {\n    this.deck = deck;\n    this.reservedPiles = reservedPiles;\n    this.stackPiles = stackPiles;\n  }\n\n  getDeck() {\n    return this.deck;\n  }\n\n  getStackPiles() {\n    return this.stackPiles;\n  }\n\n  updateDeck() {\n    this.deck.update();\n  }\n\n  getSource(sourceDetails) {\n    if (sourceDetails === \"deck\") {\n      return this.deck;\n    }\n    const [source, id] = sourceDetails.split(\"_\");\n    return this[source][id];\n  }\n\n  getDestination(destinationDetails) {\n    const [destination, id] = destinationDetails.split(\"_\");\n    return this[destination][id];\n  }\n\n  moveCard(sourceDetails, destinationDetails) {\n    const source = this.getSource(sourceDetails);\n    const destination = this.getDestination(destinationDetails);\n    const noOfCards = sourceDetails.split(\"_\")[2];\n    const cards = source.getCards(+noOfCards);\n    const hasAdded = destination.addCards(cards);\n    if (hasAdded) {\n      source.removeCards(+noOfCards);\n    }\n  }\n\n  getReservedPiles() {\n    return this.reservedPiles;\n  }\n}\n\nexport default Game;\n","class Deck {\n  constructor(cards) {\n    this.closedCards = cards;\n    this.openCards = [];\n  }\n\n  hasNext() {\n    return this.closedCards.length !== 0;\n  }\n\n  hasOpenCard() {\n    return this.openCards.length !== 0;\n  }\n\n  getOpenCard() {\n    return this.openCards[this.openCards.length - 1];\n  }\n\n  getCards() {\n    return this.openCards.slice(-1);\n  }\n\n  removeCards() {\n    this.openCards.splice(-1);\n  }\n\n  update() {\n    if (this.closedCards.length === 0) {\n      this.closedCards = this.openCards.reverse();\n      this.openCards = [];\n      return;\n    }\n    const lastCard = this.closedCards.pop();\n    this.openCards.push(lastCard);\n  }\n}\n\nexport default Deck;\n","class Card {\n  constructor(cardDetails) {\n    this.type = cardDetails.type;\n    this.number = +cardDetails.number;\n    this.color = cardDetails.color;\n    this.unicode = cardDetails.unicode;\n  }\n\n  getUnicode() {\n    return this.unicode;\n  }\n\n  checkNumber(number) {\n    return this.number === number;\n  }\n\n  isNextNumber(card) {\n    return this.number === card.number + 1;\n  }\n\n  isPreviousNumber(card) {\n    return this.number === card.number - 1;\n  }\n\n  isOfSameType(card) {\n    return this.type === card.type;\n  }\n\n  isOfSameColor(card) {\n    return this.color === card.color;\n  }\n}\n\nexport default Card;\n","class ReservedPile {\n  constructor(cards) {\n    this.cards = cards;\n  }\n\n  hasLastCard() {\n    return this.cards.length !== 0;\n  }\n\n  getLastCard() {\n    return this.cards[this.cards.length - 1];\n  }\n\n  checkCards(checkingCards) {\n    const cards = checkingCards.slice();\n    let initialCard = cards.shift();\n    if (cards.length === 0) return true;\n    return cards.every(card => {\n      const result = initialCard.isNextForReserved(card);\n      initialCard = card;\n      return result;\n    });\n  }\n\n  addCards(cards) {\n    if (this.areAddable(cards)) {\n      this.cards = this.cards.concat(cards);\n      return true;\n    }\n    return false;\n  }\n\n  areAddable(cards) {\n    if (!this.checkCards(cards)) {\n      return false;\n    }\n    if (!this.hasLastCard()) {\n      return cards[0].checkNumber(1);\n    }\n    return this.areOfThisTypeCards(this.getLastCard(), cards[0]);\n  }\n\n  areOfThisTypeCards(previousCard, currentCard) {\n    return (\n      previousCard.isPreviousNumber(currentCard) &&\n      previousCard.isOfSameType(currentCard)\n    );\n  }\n  \n  getCards() {\n    return this.cards.slice(-1);\n  }\n\n  removeCards() {\n    this.cards.splice(-1);\n  }\n}\n\nexport default ReservedPile;","class StackPile {\n  constructor(closedCards, openCards) {\n    this.closedCards = closedCards;\n    this.openCards = openCards;\n  }\n\n  hasCard() {\n    return this.openCards.length !== 0;\n  }\n\n  getNoOfClosedCards() {\n    return this.closedCards.length;\n  }\n\n  getOpenCards() {\n    return this.openCards;\n  }\n\n  addCards(cards) {\n    if (this.areAddable(cards)) {\n      this.openCards = this.openCards.concat(cards);\n      return true;\n    }\n    return false;\n  }\n\n  getLastCard() {\n    return this.openCards[this.openCards.length - 1];\n  }\n\n  areAddable(cards) {\n    if (!this.checkCards(cards)) {\n      return false;\n    }\n    if (!this.hasCard()) {\n      return cards[0].checkNumber(13);\n    }\n    return this.areOfThisTypeCards(this.getLastCard(), cards[0]);\n  }\n\n  checkCards(checkingCards) {\n    const cards = checkingCards.slice();\n    const previousCardDetail = { card: cards.shift(), result: true };\n    return cards.reduce((previousCardDetail, card) => {\n      if (!previousCardDetail.result) {\n        return previousCardDetail;\n      }\n      const result = this.areOfThisTypeCards(previousCardDetail.card, card);\n      return { card, result };\n    }, previousCardDetail).result;\n  }\n\n  areOfThisTypeCards(previousCard, currentCard) {\n    return (\n      previousCard.isNextNumber(currentCard) &&\n      !previousCard.isOfSameColor(currentCard)\n    );\n  }\n\n  getCards(noOfCards) {\n    return this.openCards.slice(-noOfCards);\n  }\n\n  removeCards(noOfCards) {\n    this.openCards.splice(-noOfCards);\n    if (this.openCards.length === 0 && this.closedCards.length !== 0) {\n      const newCard = this.closedCards.shift();\n      this.openCards.push(newCard);\n    }\n  }\n}\n\nexport default StackPile;\n"],"sourceRoot":""}